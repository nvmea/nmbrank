---
title: NMB member rankings October 2022 edition
author: nvmea
date: '2022-11-10'
tags:
  - nmb
meta_img: images/stare.jpg
description: The pollsters got it right again.
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = F)
library(tidyverse)
library(reactable)
library(reactablefmtr)
library(htmltools)
library(hrbrthemes)
library(ggthemes)
library(paletteer)
nmbrank <- read_csv("nmbrank4.csv")
prevrank <- read_csv("nmbrank3.csv")

d <- nmbrank %>% 
  pivot_longer(cols = 2:length(nmbrank), values_to = "Member")
  
d1 <- d %>%
  count(Member, name = "Votes") %>% filter(!is.na(Member))

d2 <- d %>%
  count(Member, wt = ...1, sort = T, name = "Points") %>%
  inner_join(d1) %>%
  mutate("Average Rank" = as.numeric(format(
    round(17-(Points/Votes), 2), nsmall = 2)
    ))  %>% 
  mutate(Standings = 1:45)

e <- prevrank %>% 
  pivot_longer(cols = 2:length(prevrank), values_to = "Member")
  
e1 <- e %>%
  count(Member, name = "Votes") %>% filter(!is.na(Member))

e2 <- e %>%
  count(Member, wt = ...1, sort = T, name = "Points") %>%
  inner_join(e1) %>%
  mutate("Average Rank" = as.numeric(format(
    round(17-(Points/Votes), 2), nsmall = 2)
    )) %>% 
  mutate(Standings = 1:48)

g <- full_join(d2, e2, by = "Member", suffix = c("", " (April)")) %>%
  select(1:4, 6:8, 5, 9)



wt <- c(15, 10, 9, 8, 7, 6, 5, 5, 4, 4, 3, 3, 2, 2, 1, 1)
  
  nmbrank$...1 <- wt
  prevrank$...1 <- wt
    
  d <- nmbrank %>% 
    pivot_longer(cols = 2:length(nmbrank), values_to = "Member")
  
  d1 <- d %>%
    count(Member, name = "Votes") %>% filter(!is.na(Member))
  
  d2 <- d %>%
    count(Member, wt = ...1, sort = T, name = "Points") %>%
    inner_join(d1) %>%
    mutate("Average Points" = as.numeric(format(
      round(Points/Votes, 2), nsmall = 2)
    )) %>% 
  mutate(Standings = 1:45)
  
  e <- prevrank %>% 
  pivot_longer(cols = 2:length(prevrank), values_to = "Member")
  
  e1 <- e %>%
  count(Member, name = "Votes") %>% filter(!is.na(Member))

  e2 <- e %>%
  count(Member, wt = ...1, sort = T, name = "Points") %>%
  inner_join(e1) %>%
  mutate("Average Points" = as.numeric(format(
    round((Points/Votes), 2), nsmall = 2)
    )) %>% 
  mutate(Standings = 1:48)
  
g2 <- full_join(d2, e2, by = "Member", suffix = c("", " (April)"))



```

## Intro

This is the fourth time we have asked NMB fans from all around the world at the [NMB discord server](https://discord.gg/94KW7KW) to submit their NMB member rankings. Thanks to everyone who did! We had slightly fewer voters this time (51 compared to 54 in April), but also stricter checks in place. At any rate, it is nice to see people still haven't got tired of this, even if we this time did not have any big graduation wave or a new bunch of members to vote for. And this time again, we fortunately managed to get all 45 eligible NMB members to receive at least one vote! It's my biggest worry every time, not even joking!

To count the votes, I am using the same methods I used previously, so if you are already familiar with it and don't need a refresher, you might skip the next section and go straight to the results! (Yes I know that all of you will skip it and then ask dumb questions already answered there anyway.) Once again a comparison is made throughout with the previous, [April edition](https://stanyuzu.netlify.app/post/2022-04-12-nmb-member-rankings-april-2022-edition/) of these member rankings. There is a very handy "heat map" in the appendix I recommend you referring to while reading the results. I added some new useful graphs this time as well!

## Results

### What are these results

54 wonderful people submitted their ranked lists of top 16 NMB members (although some of them did not use all 16 spots). To count these votes, I tried using several methods with different weights, but in the end I settled for two of them for the sake of simplicity.

1.  Giving 16 points for 1st place, 15 for 2nd place ... 1 for 16th place. This method is straightforward - it takes the list as it was submitted and distributes points, not trying to make any assumptions - e.g. whether for some voter there is already a huge difference between 1st place and 2nd place, or on the contrary all of the members on the list are about the same level.

2.  Giving 15 points for 1st place, 10 for 2nd place, 9 for 3rd place, 8-7-6-5-5-4-4-3-3-2-2-1-1. This method, similar to the one used for the Stage48 member rankings, assumes that an idol fan tends to have THE ONE member they feel strongly about and which therefore gets many more points than the other members on the list. It also gives slightly less value to the bottom of the list in accordance with the logic that you are likely to not have as strong opinions about that.

In the end, the differences between both methods are relatively minor. That is however an important finding in itself, as it gives certain credibility to the rankings. (However, I encourage everyone to try on their own if they want to test different methods!)

### How to read the results

The reading of the results should be fairly straightforward. For each member you have

-   points (based on the vote counting method used)

-   number of votes

-   points/votes which results in

    -   average position (which rank did voters place the member on average) in Method 1

    -   average points in Method 2

-   standings (the green and red colouring shows whether member improved or worsened their ranking compared to the April edition)

As I already mentioned, the results of the previous edition are included as well. They are the smaller numbers in brackets under the current results.

<br>

## Method 1

*Giving points according to the list (1st --- 16 points... 16th --- 1 point).*

```{r, echo=FALSE}
reactable(g,
  columns = list(
    Member = colDef(defaultSortOrder = "asc",
                    minWidth = 150),
    "Points" = colDef(cell = function(value, index) {
      April <- g$`Points (April)`[index]
      April <- if (!is.na(April)) str_c("(", April, ")") else "(–)"
      value <- if (!is.na(value)) value else "–"
      div(
        div(style = list(fontWeight = 600), value),
        div(style = list(fontSize = 12), April)
      )
    }),
    "Votes" = colDef(cell = function(value, index) {
      AprilVotes <- g$`Votes (April)`[index]
      AprilVotes <- if (!is.na(AprilVotes)) str_c("(", AprilVotes, ")") else "(–)"
      value <- if (!is.na(value)) value else "–"
      div(
        div(style = list(fontWeight = 600), value),
        div(style = list(fontSize = 12), AprilVotes)
      )
    }),
    "Average Rank" = colDef(cell = function(value, index) {
      AprilAvgRank <- g$`Average Rank (April)`[index]
      AprilAvgRank <- if (!is.na(AprilAvgRank)) str_c("(", AprilAvgRank, ")") else "(–)"
      value <- if (!is.na(value)) value else "–"
      div(
        div(style = list(fontWeight = 600), value),
        div(style = list(fontSize = 12), AprilAvgRank)
      )
    },
      defaultSortOrder = "asc"),
    "Votes (April)" = colDef(show = F),
    "Points (April)" = colDef(show = F),
    "Average Rank (April)" = colDef(show = F),
    "Standings (April)" = colDef(show = F),
    "Standings" = colDef(
      defaultSortOrder = "asc",
      style = function(value, index) {
        AprilRank <- g$`Standings (April)`[index]
        AprilRank <- if (!is.na(AprilRank)) AprilRank else 0
        color <- if (is.na(value) == F && value < AprilRank || AprilRank == 0) {
          "#00c800"
        } else if (is.na(value) == F && value > AprilRank) {
          "#dc0000"
        }
        list(color = color)
      },
      cell = function(value, index) {
        AprilRank <- g$`Standings (April)`[index]
        AprilRank <- if (!is.na(AprilRank)) str_c("(", AprilRank, ")") else "(-)"
        value <- if (!is.na(value)) value else "–"
        div(
          div(style = list(fontWeight = 600), value),
          div(style = list(fontSize = 12), AprilRank)
        )
      }
    )
  ),
  defaultPageSize = 10,
  defaultSortOrder = "desc",
  showPageSizeOptions = T,
  pageSizeOptions = c(10, 20, 50),
  defaultColDef = colDef(sortNALast = TRUE, headerClass = "sort-header"),
  rowClass = "my-row",
  showSortIcon = FALSE,
  borderless = T,
  theme = reactableTheme(
    cellStyle = list(display = "flex", flexDirection = "column", justifyContent = "center")
  )
)
```

#### THE BIG NARRATIVES

**Wakapon** is the first member to repeat, although the differences were much closer than last year, with Wakapon losing almost 100 points and some voters too. The runner-up is also the same, **Mikana**, who could have had a good shot at winning had she not lost points too (almost 30), although she even gained a voter. The fight for the third place was once again very fierce, and in the end went narrowly to **Nagisa**, who has occupied the top 4 spots in every edition so far, and even improved in rank this time --- but from the viewpoint of points and voters it has been a continuing free fall, which likely corresponds with her group activities being more and more limited.

Only two points behind the medals finished **Wakanyan**, who, after last year's huge jump into top 10, followed it up with another leap up, ending up as the only member in top 7 who not only did not drop points, but on the contrary gained more than 50! Still not far behind the top 3 was **Keito**, defending her 5th place, however, she still haemorrhaged almost 50 points and 9 voters.

Last year, **Aika** narrowly missed out on the prize of having the most voters. This time she finally won it, shared with **Karen**, though it's unsure, whether it's a satisfactory result for either of them, with Aika actually losing some voters and Karen dropping down a rank. Especially the former one once again suffered from getting very few votes in the top ranks and no 1st places. On the other hand, the latter one achieved another spectacular feat, the "bingo" of appearing in all 16 places on the ballots (see the heat map at the end of the article)!

What has to be a disappointing result without any question, **Rei** dropped from 3rd to 7th place, losing almost 90 points on the way. **Zion** has improved slightly since April and jumped from 12th to 8th, but most of all she must be extremely satisfied at beating her arch-rival **Misaki** for the first time. It was a confusing result for the "American", who dropped from 7th to 10th despite gaining some voters, but the reason is as simple as baffling --- Misaki somehow miraculously went from receiving the most (six) 1st place votes last time to not receiving a single one this time (and only that prevented her from finishing the "bingo" too)!

7th gen incursion was the big story of the last edition --- it both solidified in places and continued. There is now six 7th gens in top 12, with **Fūwa** pretty much repeating her last result and **Siyeon**, the biggest non-8th gen success story of this edition, shooting up the ranks from 20th to 11th --- it's a curious timing, considering that otherwise her initial hype seems to have been quietly dying down. **Yuzuha** on the other hand continues to drop down from top 10, still having loyal fans, but overall losing voters --- the hiatus just before the elections probably didn't help either!

There is a weird yoyo between **Shinshin** and **Sadaharu**, who in this election achieved their best result so far, and **Reiko** and **Aanon**, who on the other hand fell down a lot --- which was the inverse of the April result which had been the inverse of the last October result... Very confusing seasonal effects for sure. **Chihhī** saved the face of Danceable, while **Uuka** and **Kojirin** continue to actively participate in the transfer of votes from old generations to young generations.

*(With three fewer votes this time, there should be about 400 "missing" points compared to last election, but with some 300 points back in the pool from graduated girls the expected "deflation" of points should be small if any.)*

```{r}
g3 <- g |> filter(!is.na(Points)) |> transmute(Member = Member, Points = Points - `Points (April)`, `Average Rank` = `Average Rank` - `Average Rank (April)`, Votes = Votes - `Votes (April)`)

reactable(g3,
  compact = F,
  borderless = T,
  defaultSortOrder = 'desc',
  defaultColDef = colDef(headerClass = "sort-header"),
  showSortIcon = F,
  showPageSizeOptions = T,
  pageSizeOptions = c(10, 20, 50),
  columns = list(
    Member = colDef(
      defaultSortOrder = "asc",
      minWidth = 150
    ),
    Points = colDef(
      minWidth = 150,
      align = 'center',
      cell = data_bars(
        data = g3,
        text_position = 'outside-end',
        fill_color = paletteer_c(`"ggthemes::Classic Area Red-Green"`, 100)
        )
    ),
    `Average Rank` = colDef(
      minWidth = 150,
      align = 'center',
      cell = data_bars(
        data = g3,
        text_position = 'outside-end',
        fill_color = paletteer_c(`"ggthemes::Classic Area Red-Green"`, 100),
        number_fmt = scales::number_format(accuracy = 0.01)
      )
    ),
    Votes = colDef(
     minWidth = 150,
      align = 'center',
      cell = data_bars(
        data = g3,
        text_position = 'outside-end',
        fill_color = paletteer_c(`"ggthemes::Classic Area Red-Green"`, 100)
        ) 
    )
    )
  )
```

<br>

It is unsurprising that 8th generation members' results have overall improved a lot since April, when we still barely knew them. **Mako** and **Yukino** have broken into top 20 and become once again the two most popular girls, just in switched order from April. Three more then jumped up into top 30 --- **Ayaka**, **Yayoi** and **Sakatan**, who were also the overall biggest improvers in terms of points and voters. The rest of top 30 is made from more 7th gens: **Miyu**, **Momoka** and **Anju**, where the Hyōgo pair stagnated a bit and the Tōkyō girl slightly improved. Who was far from improving was **Yuina**, who, for some reason, became the biggest drop of this election, losing more than 100 points and 9 voters.

As for the rest of the rankings, there are some other 8th gen improvements, notably **Hono** and **Ami**, as well as drops, notably **Mihina** who fortunately at least got one vote in the end! **Yuna** fell below **Mai** who improved enough to escape the position of last placed 7th gen. **Mirai** is another big loser of this election and I think the message throughout this edition is simple - do not cut your hair!

## Method 2

*Giving more weight to 1st place and less to bottom places.*

```{r, echo=FALSE}
reactable(g2,
  columns = list(
    Member = colDef(defaultSortOrder = "asc",
                    minWidth = 150),
    "Points" = colDef(cell = function(value, index) {
      April <- g2$`Points (April)`[index]
      April <- if (!is.na(April)) str_c("(", April, ")") else "(–)"
      value <- if (!is.na(value)) value else "–"
      div(
        div(style = list(fontWeight = 600), value),
        div(style = list(fontSize = 12), April)
      )
    }),
    "Votes" = colDef(cell = function(value, index) {
      AprilVotes <- g2$`Votes (April)`[index]
      AprilVotes <- if (!is.na(AprilVotes)) str_c("(", AprilVotes, ")") else "(–)"
      value <- if (!is.na(value)) value else "–"
      div(
        div(style = list(fontWeight = 600), value),
        div(style = list(fontSize = 12), AprilVotes)
      )
    }),
    "Average Points" = colDef(cell = function(value, index) {
      AprilAvgRank <- g2$`Average Points (April)`[index]
      AprilAvgRank <- if (!is.na(AprilAvgRank)) str_c("(", AprilAvgRank, ")") else "(–)"
      value <- if (!is.na(value)) value else "–"
      div(
        div(style = list(fontWeight = 600), value),
        div(style = list(fontSize = 12), AprilAvgRank)
      )
    }),
    "Average Points" = colDef(),
    "Votes (April)" = colDef(show = F),
    "Points (April)" = colDef(show = F),
    "Average Points (April)" = colDef(show = F),
    "Standings (April)" = colDef(show = F),
    "Standings" = colDef(
      defaultSortOrder = "asc",
      style = function(value, index) {
        AprilRank <- g2$`Standings (April)`[index]
        AprilRank <- if (!is.na(AprilRank)) AprilRank else 0
        color <- if (is.na(value) == F && value < AprilRank || AprilRank == 0) {
          "#00c800"
        } else if (is.na(value) == F && value > AprilRank) {
          "#dc0000"
        }
        list(color = color)
      },
      cell = function(value, index) {
        AprilRank <- g2$`Standings (April)`[index]
        AprilRank <- if (!is.na(AprilRank)) str_c("(", AprilRank, ")") else "(-)"
        value <- if (!is.na(value)) value else "–"
        div(
          div(style = list(fontWeight = 600), value),
          div(style = list(fontSize = 12), AprilRank)
        )
      }
    )
  ),
  defaultPageSize = 10,
  defaultSortOrder = "desc",
  showPageSizeOptions = T,
  pageSizeOptions = c(10, 20, 50),
  defaultColDef = colDef(sortNALast = TRUE, headerClass = "sort-header"),
  borderless = T,
  rowClass = "my-row",
  showSortIcon = FALSE,
  theme = reactableTheme(
    cellStyle = list(display = "flex", flexDirection = "column", justifyContent = "center"),
  )
)
```

<br>

<br>

### Differences between methods?

The situation on top with this method was actually super close and we could have had a different winner with just one more vote! That would have been fun for sure. Another big change is **Siyeon** jumping all the way to 7th place, pushing **Misaki** out of top 10 --- once again, for reasons stated above, it is truly a twist of fortunes for Misaki who had always been benefited by this counting method!

Other than that, however, it is truly hard to find anything more than slight shuffles here and there, without virtually any changes to the narratives, although the point differentials are very tight at some places (for example there is only 11 points between 17th Karin and 23rd Reiko). The results are legit!

## Conclusion

That's it for the fourth edition of NMB member rankings! Once again thanks to everyone who participated and helped with organizing this! I had a lot of fun following the development of the results as votes had been pouring in and hopefully you are going to have some fun seeing the final results as well! Feel free to start all the heated post election discussions and I am always happy to hear criticism and suggestions for the next time! Thank you!

## Appendix: Votes

```{r heatmap, fig.width=8, fig.height=8, echo=FALSE}
nmbrank$...1 <- 1:16

h <- nmbrank %>%
  pivot_longer(cols = 2:length(nmbrank), values_to = "Member") %>%
  filter(is.na(Member) == F)

h %>%
  count(Member, ...1) %>%
  ggplot(aes(...1, Member, fill = n)) +
  geom_tile(colour = "white") +
  geom_text(aes(label = n), colour = "white") +
  labs(x = NULL, y = NULL) +
  scale_y_discrete(expand = c(0, 0), limits = rev) +
  scale_x_continuous(expand = c(0, 0), breaks = 1:16) +
  theme_ipsum_tw(grid = F) +
  scale_fill_continuous_tableau("Green-Gold") +
  theme(axis.text.x = element_text(vjust = -1), legend.position = "none")
```

```{r, echo=FALSE}
nmbrank$...1 <- 1:16
reactable(nmbrank,
  sortable = F,
  compact = T,
  bordered = T,
  style = list(fontSize = 14),
  defaultPageSize = 16,
  columns = list(
    ...1 = colDef(
      name = "Rank",
      style = list(position = "sticky", left = 0, background = "#fff", zIndex = 1),
      headerStyle = list(position = "sticky", left = 0, background = "#fff", zIndex = 1)
    )
  )
)
```

```{css, echo = FALSE}
.sort-header[aria-sort]:hover {
  background-color: #f4b630;
}
.sort-header[aria-sort="ascending"] {
  box-shadow: inset 0 3px 0 0 rgba(0, 0, 0, 0.6) !important;
}
.sort-header[aria-sort="descending"] {
  box-shadow: inset 0 -3px 0 0 rgba(0, 0, 0, 0.6) !important;
}
.sort-header {
  transition: box-shadow 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}
.my-row:hover {
  background-color: #FFE6E6;
}
```
