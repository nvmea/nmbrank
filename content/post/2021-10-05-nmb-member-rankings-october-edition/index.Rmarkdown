---
title: "NMB member rankings October edition"
author: "R package build"
date: '2021-10-05'
slug: []
categories: []
tags:
- one tag
- another tag
meta_img: images/image.png
description: Description for the page
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(reactable)
library(htmltools)
nmbrank <- read_csv("nmbrank2.csv")
prevrank <- read_csv("nmbrank.csv")

d <- nmbrank %>% 
  pivot_longer(cols = 2:length(nmbrank), values_to = "Member")
  
d1 <- d %>%
  count(Member, name = "Votes") %>% filter(!is.na(Member))

d2 <- d %>%
  count(Member, wt = ...1, sort = T, name = "Points") %>%
  inner_join(d1) %>%
  mutate("Average Rank" = as.numeric(format(
    round(17-(Points/Votes), 2), nsmall = 2)
    ))  %>% 
  mutate(Standings = 1:41)

e <- prevrank %>% 
  pivot_longer(cols = 2:length(prevrank), values_to = "Member")
  
e1 <- e %>%
  count(Member, name = "Votes") %>% filter(!is.na(Member))

e2 <- e %>%
  count(Member, wt = ...1, sort = T, name = "Points") %>%
  inner_join(e1) %>%
  mutate("Average Rank" = as.numeric(format(
    round(17-(Points/Votes), 2), nsmall = 2)
    )) %>% 
  mutate(Standings = 1:41)

g <- full_join(d2, e2, by = "Member", suffix = c("", " (April)")) %>%
  select(1:4, 6:8, 5, 9)



wt <- c(15, 10, 9, 8, 7, 6, 5, 5, 4, 4, 3, 3, 2, 2, 1, 1)
  
  nmbrank$...1 <- wt
  prevrank$...1 <- wt
    
  d <- nmbrank %>% 
    pivot_longer(cols = 2:length(nmbrank), values_to = "Member")
  
  d1 <- d %>%
    count(Member, name = "Votes") %>% filter(!is.na(Member))
  
  d2 <- d %>%
    count(Member, wt = ...1, sort = T, name = "Points") %>%
    inner_join(d1) %>%
    mutate("Average Points" = as.numeric(format(
      round(Points/Votes, 2), nsmall = 2)
    )) %>% 
  mutate(Standings = 1:41)
  
  e <- prevrank %>% 
  pivot_longer(cols = 2:length(prevrank), values_to = "Member")
  
  e1 <- e %>%
  count(Member, name = "Votes") %>% filter(!is.na(Member))

  e2 <- e %>%
  count(Member, wt = ...1, sort = T, name = "Points") %>%
  inner_join(e1) %>%
  mutate("Average Points" = as.numeric(format(
    round((Points/Votes), 2), nsmall = 2)
    )) %>% 
  mutate(Standings = 1:41)
  
g2 <- full_join(d2, e2, by = "Member", suffix = c("", " (April)"))



```

## Intro

This is the second time we have asked NMB fans from all around the world at the NMB discord server to submit their NMB member rankings. The first time was at the beginning of April. It was completely unorganized and the whole "project" happened only because I had the silly idea of collecting all the rankings everyone had unsuspectingly posted. Back then, there were in total 16 entries - and I now also used the results of the April edition for an interesting comparison with the current October one.

Building on all the acquired experience, the second time around was naturally much more... of the same mess. However, as more and more entries started coming in, it made sense to reach out to every at least semi-active fan on the NMB discord server, asking them to submit their vote, in order to make this project TRULY REPRESENTATIVE. Incredibly, we ended up with 48 entries, thrice as many as last time!

## Results

### What are these results

48 wonderful people submitted their ranked lists of top 16 NMB members (although a few of them did not use all 16 spots). To count these votes, I tried using several methods with different weights, but in the end I settled for two of them for the sake of simplicity.

1.  Giving 16 points for 1st place, 15 for 2nd place ... 1 for 16th place. This method is straightforward - it takes the list as it was submitted and distributes points, not trying to make any assumptions - e.g. whether for some voter there is already a huge difference between 1st place and 2nd place, or on the contrary all of the members on the list are about the same level.

2.  Giving 15 points for 1st place, 10 for 2nd place, 9 for 3rd place, 8-7-6-5-5-4-4-3-3-2-2-1-1. This method, similar to the one used for the Stage48 member rankings, assumes that an idol fan tends to have THE ONE member they feel strongly about and which therefore gets many more points than the other members on the list. It also gives slightly less value to the bottom of the list in accordance with the logic that you are likely to not have as strong opinions about that.

In the end, the differences between both methods are relatively minor. That is however an important finding in itself, as it gives certain credibility to the rankings. (However, I encourage everyone to try on their own if they want to test different methods!)

### How to read the results

The reading of the results should be fairly straightforward. For each member you have

-   points (based on the vote counting method used)

-   number of votes

-   points/votes which results in

    -   average position (which rank did voters place the member on average) in Method 1

    -   average points in Method 2

-   standings (the green and red colouring shows whether member improved or worsened their ranking compared to the April edition)

As I already mentioned, the results of the previous edition are included as well. They are the smaller numbers in brackets under the current results.

<br>

## Method 1

*Giving points according to the list (1st - 16 points... 16th - 1 point).*

```{r, echo=FALSE}
reactable(g,
          columns = list(
    Member = colDef(),
    "Points" = colDef(cell = function(value, index) {
        April <- g$`Points (April)`[index]
        April <- if (!is.na(April)) str_c("(", April, ")") else "(–)"
        value <- if (!is.na(value)) value else "–"
        div(
          div(style = list(fontWeight = 600), value),
          div(style = list(fontSize = 12), April)
        )
      }
    ),
    "Votes" = colDef(cell = function(value, index) {
        AprilVotes <- g$`Votes (April)`[index]
        AprilVotes <- if (!is.na(AprilVotes)) str_c("(", AprilVotes, ")") else "(–)"
        value <- if (!is.na(value)) value else "–"
        div(
          div(style = list(fontWeight = 600), value),
          div(style = list(fontSize = 12), AprilVotes)
        )
      }
    ),
    "Average Rank" = colDef(cell = function(value, index) {
        AprilAvgRank <- g$`Average Rank (April)`[index]
        AprilAvgRank <- if (!is.na(AprilAvgRank)) str_c("(", AprilAvgRank, ")") else "(–)"
        value <- if (!is.na(value)) value else "–"
        div(
          div(style = list(fontWeight = 600), value),
          div(style = list(fontSize = 12), AprilAvgRank)
        )
      }
    ),
    "Average Rank" = colDef(style = list(borderRight = "1px solid rgba(0, 0, 0, 0.1)")),
    "Votes (April)" = colDef(show = F),
    "Points (April)" = colDef(show = F),
    "Average Rank (April)" = colDef(show = F),
    "Standings (April)" = colDef(show = F),
    "Standings" = colDef(style = function(value, index) {
        AprilRank <- g$`Standings (April)`[index]
        AprilRank <- if (!is.na(AprilRank)) AprilRank else 0
        color <- if (is.na(value) == F && value < AprilRank || AprilRank == 0) {
          "#008000" }
        else if (is.na(value) == F && value > AprilRank) {
          "#e00000" }
         list(color = color)
         },
        cell = function(value, index) {
        AprilRank <- g$`Standings (April)`[index]
        AprilRank <- if (!is.na(AprilRank)) str_c("(", AprilRank, ")") else "(-)"
        value <- if (!is.na(value)) value else "–"
        div(
          div(style = list(fontWeight = 600), value),
          div(style = list(fontSize = 12), AprilRank)
          )
        }
      )
    ),
    defaultPageSize = 10,
    showPageSizeOptions = T,
    pageSizeOptions = c(10, 20, 50),
    defaultColDef = colDef(sortNALast = TRUE, headerClass = "sort-header"),
    rowClass = "my-row",
    borderless = T,
    theme = reactableTheme(
    # Vertically center cells
    cellStyle = list(display = "flex", flexDirection = "column", justifyContent = "center")
    )
  )
```

<br>

<br>

#### THE BIG NARRATIVES

**Cocona** is the clear winner, beating the second placed **Wakapon** by almost 30 points! **Cocona** dethroned April edition winner **Nagisa**, who however once again received the most votes, 40. **Wakapon** just about edged **Nagisa** by one point and proved to be one of the most popular members among international fans. **Mikana** ended not far behind the top 3 - interestingly, she had actually been in a great spot at the time there had been only about 20 votes in, as 4 people had picked her as their oshimen, while no one had picked **Cocona** as theirs! From then on though, many **Cocona** oshis started putting in their votes and turned everything in her favour.

Going further down, It is interesting to notice that the top 8 members did not change since last time. **Yuzuha** jumped ahead of **Keito** and **Karen**, largely thanks to more than tripling the number of her votes. **Uuka** also managed to comfortably hold her spot in top 10. The only new addition to the top 10 is therefore **Momone**, who improved greatly and almost quadrupled her points. However, eleventh **Aika** finished very close behind **Momone**, actually getting many more votes (27 to 19), but unfortunately for her, voters were placing her mostly in lower ranks (Average Rank 9.59 to Momone's 6.26). At any rate, **Aika** won the most popular 7th gen member award!

Another member who finished not far behind top 10 is **Nanaho**, who is one of the biggest success stories of this edition, receiving almost 6 times as many points and votes than last time. **Misaki** was dethroned from being the most popular 7th gen but her result is still very decent. On the other hand **Karin** dropped out of top 10 and especially her Average Rank went down a lot (from 6.44 to 9.25)

**Shinshin** is another great success story - my hypothesis would be that she is indeed a relatively known face even among the more casual fans? The next member is also an interesting one - has everyone's favourite meme **Sadaharu** become an actual fan favourite? She got as many votes as **Karin**, and even though her Average Rank is again quite low, it's clear she has at the very least got her name known! **Fuuwa** and **Chihhi** on the other hand relied more on being placed higher by fewer fans - it resulted in a slight drop for **Fuuwa** but decent rise for **Chihhi**. The only thing to point out about the final top 20 entry, **Aanon**, is... consistency!

**Haasa** is another member dropping a lot compared to last time, even though her numbers are not particularly bad - possibly just not being able to get as many votes among more new and casual voters? Similar drops happened to **Marin** and especially **Mirai**, who also didn't manage to attract more support among the expanded voter base. On the other hand we see significant improvement for **Reiko** and, unsurprisingly, 7th gen members like **Zion** (from 4 votes to 17), **Miyu** (1 to 14) or **Anju** (1 to 11). An even newer addition to the group, **Siyeon**, already got 11 votes and it will be interesting to see how far she can go next time!

Let's also point out that this time, all 41 current NMB members got at least one vote! (We were a few members shy away from that in April, although back then there were more members in NMB and fewer voters.) All NMB members have their own charm!

<br>

## Method 2

*Giving more weight to 1st place and less to bottom places.*

```{r, echo=FALSE}
reactable(g2,
          columns = list(
    Member = colDef(),
    "Points" = colDef(cell = function(value, index) {
        April <- g2$`Points (April)`[index]
        April <- if (!is.na(April)) str_c("(", April, ")") else "(–)"
        value <- if (!is.na(value)) value else "–"
        div(
           div(style = list(fontWeight = 600), value),
           div(style = list(fontSize = 12), April)
         )
      }
    ),
    "Votes" = colDef(cell = function(value, index) {
        AprilVotes <- g2$`Votes (April)`[index]
        AprilVotes <- if (!is.na(AprilVotes)) str_c("(", AprilVotes, ")") else "(–)"
        value <- if (!is.na(value)) value else "–"
        div(
          div(style = list(fontWeight = 600), value),
          div(style = list(fontSize = 12), AprilVotes)
        )
      }
    ),
    "Average Points" = colDef(cell = function(value, index) {
        AprilAvgRank <- g2$`Average Points (April)`[index]
        AprilAvgRank <- if (!is.na(AprilAvgRank)) str_c("(", AprilAvgRank, ")") else "(–)"
        value <- if (!is.na(value)) value else "–"
        div(
          div(style = list(fontWeight = 600), value),
          div(style = list(fontSize = 12), AprilAvgRank)
        )
      }
    ),
    "Average Points" = colDef(),
    "Votes (April)" = colDef(show = F),
    "Points (April)" = colDef(show = F),
    "Average Points (April)" = colDef(show = F),
    "Standings (April)" = colDef(show = F),
    "Standings" = colDef(style = function(value, index) {
        AprilRank <- g2$`Standings (April)`[index]
        AprilRank <- if (!is.na(AprilRank)) AprilRank else 0
        color <- if (is.na(value) == F && value < AprilRank || AprilRank == 0) {
          "#008000" }
        else if (is.na(value) == F && value > AprilRank) {
          "#e00000" }
         list(color = color)
         },
        cell = function(value, index) {
        AprilRank <- g2$`Standings (April)`[index]
        AprilRank <- if (!is.na(AprilRank)) str_c("(", AprilRank, ")") else "(-)"
        value <- if (!is.na(value)) value else "–"
        div(
          div(style = list(fontWeight = 600), value),
          div(style = list(fontSize = 12), AprilRank)
        )
      }
        )),
          defaultPageSize = 10,
          showPageSizeOptions = T,
          pageSizeOptions = c(10, 20, 50),
          defaultColDef = colDef(sortNALast = TRUE, headerClass = "sort-header"),
          borderless = T,
          rowClass = "my-row",
          theme = reactableTheme(
          # Vertically center cells
          cellStyle = list(display = "flex", flexDirection = "column", justifyContent = "center"),
          
  ))
```

<br>

<br>

### Differences between methods?

As we can see, **Cocona** still comfortably takes the crown even with a different counting system. On the other hand, **Wakapon** dropped from second to fourth place, while **Mikana**, who was a relatively popular choice for an oshimen, climbed up to third and even almost took the second place. Funnily enough, using Method 2 the standings in the top 7 are almost identical to the April edition of Method 2, with **Yuzuha** ahead of **Rei**, once again thanks to several people picking her as their oshimen.

The 11-20 rankings are also about the same as when using Method 1. The minor differences are mostly explained by factors that I already mentioned while discussing Method 1 - girls with higher average ranking moved slightly up (**Nanaho**, **Chihhi**, **Fuuwa**) and girls with more votes but lower rankings (**Aika**, **Sadaharu**, **Shinshin**) moved down.

As for the rest of the rankings, there are virtually no differences worth talking about.

## Outro

That's it for the October edition... OR IS IT? Well, it is from my side for now. I would like to thank all the participants (myself included!) because this could have obviously not happened without you! I am looking forward to everyone's opinions and suggestions regarding the format! Thanks again if you actually read all the way here!

<br>

## Appendix: Votes

```{r, echo=FALSE}
nmbrank$...1 <- 1:16
reactable(nmbrank,
          sortable = F,
          compact = T,
          bordered = T,
          style = list(fontSize = 14),
          defaultPageSize = 16,
          columns = list(
    ...1 = colDef(name = "Rank",
      style = list(position = "sticky", left = 0, background = "#fff", zIndex = 1),
      headerStyle = list(position = "sticky", left = 0, background = "#fff", zIndex = 1)
    )))
```

```{css, echo = FALSE}
.sort-header[aria-sort]:hover {
  background-color: #f4b630;
}
.my-row:hover {
  background-color: #FFE6E6;
}
```
