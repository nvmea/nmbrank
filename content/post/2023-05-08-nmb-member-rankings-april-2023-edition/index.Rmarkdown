---
title: NMB member rankings April 2023 edition
author: nvmea
date: '2023-05-08'
slug: []
categories: []
tags:
  - nmb
meta_img: images/mj.jpg
description: Then I encountered this line in the lyrics, "Let the generations change!"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = F)
library(tidyverse)
library(reactable)
library(reactablefmtr)
library(htmltools)
library(hrbrthemes)
library(ggthemes)
library(paletteer)
nmbrank <- read_csv("nmbrank5.csv")
prevrank <- read_csv("nmbrank4.csv")

d <- nmbrank %>% 
  pivot_longer(cols = 2:length(nmbrank), values_to = "Member")
  
d1 <- d %>%
  count(Member, name = "Votes") %>% filter(!is.na(Member))

d2 <- d %>%
  count(Member, wt = ...1, sort = T, name = "Points") %>%
  inner_join(d1) %>%
  mutate("Average Rank" = as.numeric(format(
    round(17-(Points/Votes), 2), nsmall = 2)
    ))  %>% 
  mutate(Standings = 1:59)

e <- prevrank %>% 
  pivot_longer(cols = 2:length(prevrank), values_to = "Member")
  
e1 <- e %>%
  count(Member, name = "Votes") %>% filter(!is.na(Member))

e2 <- e %>%
  count(Member, wt = ...1, sort = T, name = "Points") %>%
  inner_join(e1) %>%
  mutate("Average Rank" = as.numeric(format(
    round(17-(Points/Votes), 2), nsmall = 2)
    )) %>% 
  mutate(Standings = 1:45)

g <- full_join(d2, e2, by = "Member", suffix = c("", " (October)")) %>%
  select(1:4, 6:8, 5, 9)



wt <- c(15, 10, 9, 8, 7, 6, 5, 5, 4, 4, 3, 3, 2, 2, 1, 1)
  
  nmbrank$...1 <- wt
  prevrank$...1 <- wt
    
  d <- nmbrank %>% 
    pivot_longer(cols = 2:length(nmbrank), values_to = "Member")
  
  d1 <- d %>%
    count(Member, name = "Votes") %>% filter(!is.na(Member))
  
  d2 <- d %>%
    count(Member, wt = ...1, sort = T, name = "Points") %>%
    inner_join(d1) %>%
    mutate("Average Points" = as.numeric(format(
      round(Points/Votes, 2), nsmall = 2)
    )) %>% 
  mutate(Standings = 1:59)
  
  e <- prevrank %>% 
  pivot_longer(cols = 2:length(prevrank), values_to = "Member")
  
  e1 <- e %>%
  count(Member, name = "Votes") %>% filter(!is.na(Member))

  e2 <- e %>%
  count(Member, wt = ...1, sort = T, name = "Points") %>%
  inner_join(e1) %>%
  mutate("Average Points" = as.numeric(format(
    round((Points/Votes), 2), nsmall = 2)
    )) %>% 
  mutate(Standings = 1:45)
  
g2 <- full_join(d2, e2, by = "Member", suffix = c("", " (October)"))



```

## Intro

This is the fifth time we have asked NMB fans from all around the world at the [NMB discord server](https://discord.gg/94KW7KW) to submit their NMB member rankings. Thanks to everyone who did! We dropped quite a few voters again (44 compared to 51 in October and 54 last year!), NMB is clearly flopping! It is nevertheless still a good number and gives the result enough relevancy! The results saw some big shakeups however, so maybe all those missing people were somehow necessary to keep the universe in balance...or was it everyone moving onto 9th gen... at any rate it at least adds to the fun! On the topic of 9th gens, I was pleasantly surprised to see that out of the 17 girls added to the pool, only 2 of them got no vote. I had feared it would be much worse --- 9th gen not flopping! All the seniors still managed to get at least one vote too, which is also great of course!

To count the votes, I am using the same methods I used previously, so if you are already familiar with it and don't need a refresher, you might skip the next section and go straight to the results! (Yes I know that all of you will skip it and then ask dumb questions already answered there anyway.) Once again a comparison is made throughout with the previous, [October edition](https://stanyuzu.netlify.app/post/2022-11-10-nmb-member-rankings-october-2022-edition/) of these member rankings. There is a very handy "heat map" in the appendix I recommend you referring to while reading the results.

## Results

#### What are these results

44 wonderful people submitted their ranked lists of top 16 NMB members (although some of them did not use all 16 spots). To count these votes, I tried using several methods with different weights, but in the end I settled for two of them for the sake of simplicity.

1.  Giving 16 points for 1st place, 15 for 2nd place ... 1 for 16th place. This method is straightforward - it takes the list as it was submitted and distributes points, not trying to make any assumptions - e.g. whether for some voter there is already a huge difference between 1st place and 2nd place, or on the contrary all of the members on the list are about the same level.

2.  Giving 15 points for 1st place, 10 for 2nd place, 9 for 3rd place, 8-7-6-5-5-4-4-3-3-2-2-1-1. This method, similar to the one used for the Stage48 member rankings, assumes that an idol fan tends to have THE ONE member they feel strongly about and which therefore gets many more points than the other members on the list. It also gives slightly less value to the bottom of the list in accordance with the logic that you are likely to not have as strong opinions about that.

In the end, the differences between both methods are relatively minor. That is however an important finding in itself, as it gives certain credibility to the rankings. (However, I encourage everyone to try on their own if they want to test different methods!)

#### How to read the results

The reading of the results should be fairly straightforward. For each member you have

-   points (based on the vote counting method used)

-   number of votes

-   points/votes which results in

    -   average position (which rank did voters place the member on average) in Method 1

    -   average points in Method 2

-   standings (the green and red colouring shows whether member improved or worsened their ranking compared to the April edition)

As I already mentioned, the results of the previous edition are included as well. They are the smaller numbers in brackets under the current results.

<br>

## Method 1

*Giving points according to the list (1st --- 16 points... 16th --- 1 point).*

```{r, echo=FALSE}
reactable(g,
  columns = list(
    Member = colDef(
      defaultSortOrder = "asc",
      minWidth = 150
    ),
    "Points" = colDef(cell = function(value, index) {
      October <- g$`Points (October)`[index]
      October <- if (!is.na(October)) str_c("(", October, ")") else "(–)"
      value <- if (!is.na(value)) value else "–"
      div(
        div(style = list(fontWeight = 600), value),
        div(style = list(fontSize = 12), October)
      )
    }),
    "Votes" = colDef(cell = function(value, index) {
      OctoberVotes <- g$`Votes (October)`[index]
      OctoberVotes <- if (!is.na(OctoberVotes)) str_c("(", OctoberVotes, ")") else "(–)"
      value <- if (!is.na(value)) value else "–"
      div(
        div(style = list(fontWeight = 600), value),
        div(style = list(fontSize = 12), OctoberVotes)
      )
    }),
    "Average Rank" = colDef(
      cell = function(value, index) {
        OctoberAvgRank <- g$`Average Rank (October)`[index]
        OctoberAvgRank <- if (!is.na(OctoberAvgRank)) str_c("(", OctoberAvgRank, ")") else "(–)"
        value <- if (!is.na(value)) value else "–"
        div(
          div(style = list(fontWeight = 600), value),
          div(style = list(fontSize = 12), OctoberAvgRank)
        )
      },
      defaultSortOrder = "asc"
    ),
    "Votes (October)" = colDef(show = F),
    "Points (October)" = colDef(show = F),
    "Average Rank (October)" = colDef(show = F),
    "Standings (October)" = colDef(show = F),
    "Standings" = colDef(
      defaultSortOrder = "asc",
      style = function(value, index) {
        OctoberRank <- g$`Standings (October)`[index]
        OctoberRank <- if (!is.na(OctoberRank)) OctoberRank else 0
        color <- if (is.na(value) == F && value < OctoberRank || OctoberRank == 0) {
          "#00c800"
        } else if (is.na(value) == F && value > OctoberRank) {
          "#dc0000"
        }
        list(color = color)
      },
      cell = function(value, index) {
        OctoberRank <- g$`Standings (October)`[index]
        OctoberRank <- if (!is.na(OctoberRank)) str_c("(", OctoberRank, ")") else "(-)"
        value <- if (!is.na(value)) value else "–"
        div(
          div(style = list(fontWeight = 600), value),
          div(style = list(fontSize = 12), OctoberRank)
        )
      }
    )
  ),
  defaultPageSize = 10,
  defaultSortOrder = "desc",
  showPageSizeOptions = T,
  pageSizeOptions = c(10, 20, 60),
  defaultColDef = colDef(sortNALast = TRUE, headerClass = "sort-header"),
  rowClass = "my-row",
  showSortIcon = FALSE,
  borderless = T,
  theme = reactableTheme(
    cellStyle = list(display = "flex", flexDirection = "column", justifyContent = "center")
  )
)
```

#### THE BIG NARRATIVES

Out of nowhere, **Nagisa** came back after two years to reclaim her throne --- only the real fans remember she won the very first edition as well (I had to look it up too)! **Mikana** took the second place for the third time in a row, once again coming quite close. The current NMB centre got the most first places, 5, but her support became rather thin, losing 9 voters. **Wakapon** was not able to three-peat as she suffered significant losses for the second time in a row. Even though Wakapon in fact lost fewer voters than Mikana, she also slipped down a few places on most people's ballots, which overall ended up costing her two places.

What follows is one of the main narratives of these elections. One side of it is the rise of 8th gens. Everyone's favourite SakaSaka combi stormed into the top 10. (Who did they replace? We'll come back to that question in a second!) **Mako** took the fourth place and got the most votes of all the members; **Sakatan** took the eighth place, jumped up 21(!) places, and was for the second time in a row the biggest gainer of points. (Interestingly if you look at the heat map their vote profile is extremely similar, with Mako simply having more support overall.) And there is another newcomer in the top 5, **Siyeon**, who didn't actually gain that much points, but in the situation of everyone around her losing, it was enough to climb up a lot.

**Rei** (who got the second most first place votes together with Siyeon) and **Aika** switched places after both of them suffered losses, which were however small enough to be able to keep their place in the top 7. It was a similar story for **Karen**, who still managed to hang on her top 10 spot. It was a slightly harsher story for **Keito**, who dropped four places down, from fifth to ninth.

**Wakanyan** was one of the main success stories of last edition, which she unfortunately did not manage to replicate and fell down from fourth to eleventh. Not a good period for Wakanas! There are two more 7th gens in the second ten. **Fūwa** lost quite a few points (but only one voter), yet stayed around the same ranking. **Momoka** did not lose points, even slightly gained, and that was enough to shoot her up six places. **Yayoi** and to a lesser degree **Ayaka** are another 8th gen successes, both jumping up more than ten places. There is one more 8th gen in the second ten of the rankings, but even though **Yukino** ranked up by four places, she actually lost points and went from second among 8th gens to fifth. As for the seniors, **Chihhi**, **Reiko** and **Kojirin** pretty much repeated their performance, while **Shinshin** dropped a bit harder, but as I had already mentioned last time, for some reason she and **Sadaharu** always perform bad in April and well in October.

*(With seven fewer votes this time and without Okamoto Rena, there should be about 850 "missing" points compared to last election. Therefore there is some expected loss of \~20 points for the 44 girls from previous election --- and of course likely even more, considering there was 17 new girls to vote for.)*

```{r}
g3 <- g |>
  filter(!is.na(Points), !is.na(`Points (October)`)) |>
  transmute(Member = Member, Points = Points - `Points (October)`, `Average Rank` = `Average Rank` - `Average Rank (October)`, Votes = Votes - `Votes (October)`)

reactable(g3,
  compact = F,
  borderless = T,
  defaultSortOrder = "desc",
  defaultColDef = colDef(headerClass = "sort-header"),
  showSortIcon = F,
  showPageSizeOptions = T,
  pageSizeOptions = c(10, 20, 60),
  columns = list(
    Member = colDef(
      defaultSortOrder = "asc",
      minWidth = 150
    ),
    Points = colDef(
      minWidth = 150,
      align = "center",
      cell = data_bars(
        data = g3,
        text_position = "outside-end",
        fill_color = paletteer_c(`"ggthemes::Classic Area Red-Green"`, 100)
      )
    ),
    `Average Rank` = colDef(
      minWidth = 150,
      align = "center",
      cell = data_bars(
        data = g3,
        text_position = "outside-end",
        fill_color = paletteer_c(`"ggthemes::Classic Area Red-Green"`, 100, direction = -1),
        number_fmt = scales::number_format(accuracy = 0.01)
      )
    ),
    Votes = colDef(
      minWidth = 150,
      align = "center",
      cell = data_bars(
        data = g3,
        text_position = "outside-end",
        fill_color = paletteer_c(`"ggthemes::Classic Area Red-Green"`, 100)
      )
    )
  )
)
```

<br>

Only at the start of the third ten, we find out who vacated all those top 10 places. Arch-rivals **Zion** and **Misaki** ended up on the same number of points, a number very low, which relegated them to the position of one of the biggest losers of this election. They both lost more than 100 points and 11 and 15 voters respectively! The trend is clear --- other 7th gens like **Miyu**, **Anju** and **Mai** (who went from 11 voters to 3!) also dropped down; **Yuna** was the only one who didn't lose, but she didn't really gain either... On the other hand 8th gens scored at least a modest plus everywhere, with the exceptions of **Hono** and **Pikarun**. There's not much to point out about the remaining seniors, as they all seemingly swim against the current of the times.

Let's finally turn our attention to the 9th gens. As I mentioned, 15 out of 17 made it into the rankings (only Sakamoto Reio and Nishida Honoka did not). Out of them, **Yuka** scored clearly the best result, ranking 32nd, 14 points ahead of **Reipon** and **Tenna**. From there on, the gaps are very small and there's not a lot to dissect. It's rather going to be interesting to see whether 9th gens can emulate 8th gen's upward trajectory --- and whether 8th gens can avert 7th gen's downward trajectory...

## Method 2

*Giving more weight to 1st place and less to bottom places.*

```{r, echo=FALSE}
reactable(g2,
  columns = list(
    Member = colDef(defaultSortOrder = "asc"),
    "Points" = colDef(cell = function(value, index) {
      October <- g2$`Points (October)`[index]
      October <- if (!is.na(October)) str_c("(", October, ")") else "(–)"
      value <- if (!is.na(value)) value else "–"
      div(
        div(style = list(fontWeight = 600), value),
        div(style = list(fontSize = 12), October)
      )
    }),
    "Votes" = colDef(cell = function(value, index) {
      OctoberVotes <- g2$`Votes (October)`[index]
      OctoberVotes <- if (!is.na(OctoberVotes)) str_c("(", OctoberVotes, ")") else "(–)"
      value <- if (!is.na(value)) value else "–"
      div(
        div(style = list(fontWeight = 600), value),
        div(style = list(fontSize = 12), OctoberVotes)
      )
    }),
    "Average Points" = colDef(cell = function(value, index) {
      OctoberAvgRank <- g2$`Average Points (October)`[index]
      OctoberAvgRank <- if (!is.na(OctoberAvgRank)) str_c("(", OctoberAvgRank, ")") else "(–)"
      value <- if (!is.na(value)) value else "–"
      div(
        div(style = list(fontWeight = 600), value),
        div(style = list(fontSize = 12), OctoberAvgRank)
      )
    }),
    "Average Points" = colDef(),
    "Votes (October)" = colDef(show = F),
    "Points (October)" = colDef(show = F),
    "Average Points (October)" = colDef(show = F),
    "Standings (October)" = colDef(show = F),
    "Standings" = colDef(
      defaultSortOrder = "asc",
      style = function(value, index) {
        OctoberRank <- g2$`Standings (October)`[index]
        OctoberRank <- if (!is.na(OctoberRank)) OctoberRank else 0
        color <- if (is.na(value) == F && value < OctoberRank || OctoberRank == 0) {
          "#00c800"
        } else if (is.na(value) == F && value > OctoberRank) {
          "#dc0000"
        }
        list(color = color)
      },
      cell = function(value, index) {
        OctoberRank <- g2$`Standings (October)`[index]
        OctoberRank <- if (!is.na(OctoberRank)) str_c("(", OctoberRank, ")") else "(-)"
        value <- if (!is.na(value)) value else "–"
        div(
          div(style = list(fontWeight = 600), value),
          div(style = list(fontSize = 12), OctoberRank)
        )
      }
    )
  ),
  defaultPageSize = 10,
  defaultSortOrder = "desc",
  showPageSizeOptions = T,
  pageSizeOptions = c(10, 20, 60),
  defaultColDef = colDef(sortNALast = TRUE, headerClass = "sort-header"),
  borderless = T,
  rowClass = "my-row",
  showSortIcon = FALSE,
  theme = reactableTheme(
    cellStyle = list(display = "flex", flexDirection = "column", justifyContent = "center"),
  )
)
```

<br>

<br>

#### Differences between methods?

For the first time in five editions, we actually got a different winner between the two different methods. **Mikana** made use of her rankings being more top heavy than **Nagisa's** and narrowly took the first place... although when you look at the actual votes, it's far from clear (Nagisa has more votes in top 5 for example). I think it rather shows that it was very close, and with a different scoring method you might get a different picture again. At any rate, it is actually Mikana's very first victory, even though she has been hovering around the first place since ever. **Siyeon's** jump to the third place is also traceable to many voters ranking her high. On the other hand, **Aika** performs worse due to her continual problem of her support being fairly wide yet fairly shallow (she once again got no first place vote).

Other than that, the differences between the methods are once again mostly negligible.

## Conclusion

That's it for the fifth edition of NMB member rankings! Once again thanks to everyone who participated and helped with organizing this! I had a lot of fun following the development of the results as votes had been pouring in and hopefully you are going to have some fun seeing the final results as well! Feel free to start all the heated post election discussions and I am always happy to hear criticism and suggestions for the next time! Thank you!

## Appendix: Votes

```{r heatmap, fig.width=8, fig.height=9, echo=FALSE}
nmbrank$...1 <- 1:16

h <- nmbrank %>%
  pivot_longer(cols = 2:length(nmbrank), values_to = "Member") %>%
  filter(is.na(Member) == F)

h %>%
  count(Member, ...1) %>%
  ggplot(aes(...1, Member, fill = n)) +
  geom_tile(colour = "white") +
  geom_text(aes(label = n), colour = "white") +
  labs(x = NULL, y = NULL) +
  scale_y_discrete(expand = c(0, 0), limits = rev) +
  scale_x_continuous(expand = c(0, 0), breaks = 1:16) +
  theme_ipsum_tw(grid = F) +
  scale_fill_continuous_tableau("Green-Gold") +
  theme(axis.text.x = element_text(vjust = -1), legend.position = "none")
```

```{r, echo=FALSE}
nmbrank$...1 <- 1:16
reactable(nmbrank,
  sortable = F,
  compact = T,
  bordered = T,
  style = list(fontSize = 14),
  defaultPageSize = 16,
  columns = list(
    ...1 = colDef(
      name = "Rank",
      style = list(position = "sticky", left = 0, background = "#fff", zIndex = 1),
      headerStyle = list(position = "sticky", left = 0, background = "#fff", zIndex = 1)
    )
  )
)
```

```{css, echo = FALSE}
.sort-header[aria-sort]:hover {
  background-color: #f4b630;
}
.sort-header[aria-sort="ascending"] {
  box-shadow: inset 0 3px 0 0 rgba(0, 0, 0, 0.6) !important;
}
.sort-header[aria-sort="descending"] {
  box-shadow: inset 0 -3px 0 0 rgba(0, 0, 0, 0.6) !important;
}
.sort-header {
  transition: box-shadow 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}
.my-row:hover {
  background-color: #FFE6E6;
}
```
